Dans ce code, plusieurs étapes principales peuvent être identifiées :

1. Lignes 29–30 : Création d’une image PPM. Cette étape initialise la structure `ppm_image` qui sera utilisée pour générer et stocker l'image représentant l'ensemble de Mandelbrot.

2. Lignes 33–34 : Définition d’une référence de couleur (`colref`) pour convertir les itérations logarithmiques en valeurs de nuances de gris, facilitant ainsi la représentation visuelle.

3. Lignes 36–45 : Deux boucles imbriquées parcourent chaque pixel de l'image (défini par les dimensions `SIZEX` et `SIZEY`). Chaque pixel est traité individuellement pour calculer son appartenance à l'ensemble de Mandelbrot.

4. Lignes 47–57 : Initialisation des nombres complexes `c` et `z` pour effectuer les calculs itératifs. Ensuite, une boucle `while` calcule la trajectoire de chaque point complexe et vérifie si son module dépasse le seuil défini (`TRSH`). Si le seuil est dépassé, la boucle s'arrête.

5. Lignes 59–60 : Conversion du nombre d'itérations en une nuance de gris et affectation de cette couleur au pixel correspondant dans l’image.

6. Lignes 62–63 : L'image générée est sauvegardée au format `.ppm`, et les ressources utilisées pour l’image sont libérées.

L’objectif global de ce code est de générer une visualisation de l'ensemble de Mandelbrot en calculant des itérations complexes pour chaque pixel, puis en convertissant ces calculs en valeurs de gris pour créer une image.



